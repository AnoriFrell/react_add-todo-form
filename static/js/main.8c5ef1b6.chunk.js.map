{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","_ref","user","_jsx","className","href","concat","children","TodoInfo","todo","title","completed","_jsxs","classNames","TodoList","todos","map","getUserById","usersFromServer","find","getHighestTodoId","list","listOfId","item","Math","max","defaultList","userId","App","setTodos","useState","setTitle","titleError","setTitleError","setUserId","userError","setUserError","currentList","action","method","onSubmit","event","preventDefault","trim","type","placeholder","value","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8c5ef1b6.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { User } from '../../types';\nimport './UserInfo.scss';\n\ntype Props = {\n  user: User | null;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${user?.email}`}>\n      {user?.name}\n    </a>\n  );\n};\n","import classNames from 'classnames';\nimport { Todo } from '../../types';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo,\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    title,\n    user,\n    completed,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={classNames(\n        'TodoInfo',\n        { 'TodoInfo--completed': completed },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      <UserInfo user={user} />\n    </article>\n  );\n};\n","import { Todo } from '../../types/types';\nimport { TodoInfo } from '../TodoInfo';\nimport './TodoList.scss';\n\ntype Props = {\n  todos: Todo[],\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo\n          todo={todo}\n          key={todo.id}\n          data-id={todo.id}\n        />\n      ))}\n    </section>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { Todo } from './types';\nimport { TodoList } from './components/TodoList';\n\nfunction getUserById(id: number) {\n  return usersFromServer.find(user => user.id === id) || null;\n}\n\nfunction getHighestTodoId(list: Todo[]) {\n  const listOfId = list.map(item => item.id);\n\n  return Math.max(...listOfId);\n}\n\nconst defaultList = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n\nexport const App = () => {\n  const [todos, setTodos] = useState(defaultList);\n\n  const [title, setTitle] = useState('');\n  const [titleError, setTitleError] = useState(false);\n\n  const [userId, setUserId] = useState(0);\n  const [userError, setUserError] = useState(false);\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setTitleError(false);\n  };\n\n  const handleUserChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+event.target.value);\n    setUserError(false);\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    setTitleError(!title.trim());\n    setUserError(!userId);\n\n    if (!title.trim() || !userId) {\n      // eslint-disable-next-line\n      return;\n    }\n  };\n\n  setTodos(currentList => [...currentList, {\n    id: getHighestTodoId(currentList) + 1,\n    title,\n    completed: false,\n    userId,\n    user: getUserById(userId) || null,\n  }]);\n\n  setTitle('');\n  setUserId(0);\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label>\n            Title:&nbsp;\n\n            <input\n              type=\"text\"\n              data-cy=\"titleInput\"\n              placeholder=\"Enter a title\"\n              value={title}\n              onChange={handleTitleChange}\n            />\n          </label>\n\n          {titleError && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label>\n            User:&nbsp;&nbsp;\n\n            <select\n              data-cy=\"userSelect\"\n              value={userId}\n              onChange={handleUserChange}\n            >\n              <option value=\"0\" disabled>Choose a user</option>\n\n              {usersFromServer.map(user => (\n                <option\n                  value={user.id}\n                  key={user.id}\n                >\n                  {user.name}\n                </option>\n              ))}\n            </select>\n          </label>\n\n          {userError && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}